name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PROJECT_ID: "399664"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get modpack info
        id: info
        run: |
            manifestjson=`cat pax/modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "::set-output name=projectname::$projectname"
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "::set-output name=version::$version"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

  build-modpack:
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download PAX
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Move changelog
        run:  mv CHANGELOG.md pax/modpack/CHANGELOG.md
      - name: Export modpack
        run: |
          cd pax/
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: |
          mv pax/.out/${{ needs.modpack-info.outputs.projectname }}.zip pax/.out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: pax/.out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip

  build-serverpack:
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Modpack Downloader CLI
        run: |
          mkdir ${GITHUB_WORKSPACE}/downloader
          mkdir ${GITHUB_WORKSPACE}/mods
          wget https://github.com/Nincraft/ModPackDownloader/releases/download/0.6.1/ModpackDownloader-cli-0.6.1.jar -O ${GITHUB_WORKSPACE}/downloader/ModpackDownloader-cli-0.6.1.jar
      - name: Download Mods
        run: |
          cd pax/
          sudo chmod +x ./sync_mods.sh
          ./sync_mods.sh
      - name: Export serverpack
        run: |
          cd pax/serverpack/
          java -jar ServerPackCreator-3.0.0-alpha.12.jar -cli
      - name: Rename zip
        run: |
          mv pax/serverpack/server-packs/_server_pack.zip pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: serverpack
          path: pax/serverpack/server-packs/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip

  release-github:
    runs-on: ubuntu-latest
    needs: [build-modpack, build-serverpack, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: Download serverpack
        uses: actions/download-artifact@v2
        with:
          name: serverpack
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip
            ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-curseforge:
    runs-on: ubuntu-latest
    needs: [build-modpack, build-serverpack, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: Download serverpack
        uses: actions/download-artifact@v2
        with:
          name: serverpack
      - name: Get release type
        id: release-type
        run: |
          rel_type="release"
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*) rel_type="alpha" ;;
            *beta*) rel_type="beta" ;;
            *) rel_type="release" ;;
          esac
          echo "::set-output name=type::$rel_type"
      - name: Create release
        uses: juraj-hrivnak/upload-curseforge-modpack-action@v1.0.1
        with:
          api-token: ${{ secrets.CF_API_TOKEN }}
          project-id: ${{ env.PROJECT_ID }}
          modpack-path: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          display-name: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}
          modpack-server-path: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack.zip
          server-display-name: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-Server-Pack
          changelog: CHANGELOG.md
          changelog-format: markdown
          game-version: ${{ needs.modpack-info.outputs.version }}
          release-type: ${{ steps.release-type.outputs.type }}
